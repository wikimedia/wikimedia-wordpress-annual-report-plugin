document.addEventListener("DOMContentLoaded",(()=>{const e=window.mapboxgl;e.accessToken=wmf.apiKey;const t=document.getElementById("map"),i=document.getElementsByClassName("wp-block-wmf-reports-marker"),s=document.getElementById("map-back"),l=document.getElementById("map-forward"),a=new e.NavigationControl,r=new e.Map({attributionControl:!1,container:"map",center:[8.18,11.83],projection:"equalEarth",scrollZoom:!1,style:t?.dataset?.mapStyle||"mapbox://styles/mapbox/light-v11",zoom:1});let o=0,n=!1;r.addControl(a);const c=e=>{o=e;const t=i[e],s=document.getElementsByClassName("marker"),l=Array.from(s).filter((e=>e.dataset.id===t.id)),a=document.querySelector('.wp-block-wmf-reports-marker[style*="visibility: visible"]');let r=0;a&&(r=Array.from(i).findIndex((e=>parseInt(a.id)===parseInt(e.id)))),Array.from(s).forEach((e=>{e.classList.remove("active")})),l.forEach((e=>{e.classList.add("active")})),Array.from(i).forEach(((i,s)=>{if(!n&&s!==e){if(s===r&&r!==e)return e>=r?(t.style.height=null,t.style.opacity=0,i.style.opacity=1,i.style.position="absolute",i.style.zIndex=1,i.classList.add("animate"),setTimeout((()=>{i.style.height=t.offsetHeight,i.style.opacity=0,n=!0}),1),setTimeout((()=>{i.style.height=0,i.style.opacity=null,i.style.position=null,i.style.visibility="hidden",i.style.zIndex=null,i.classList.remove("animate"),n=!1}),250),t.style.height=null,t.style.opacity=null,void(t.style.visibility="visible")):e<r?(t.style.height=null,t.style.opacity=0,t.style.position="absolute",t.style.visibility="visible",i.style.height=null,i.style.opacity=1,i.style.visibility="visible",setTimeout((()=>{t.classList.add("animate"),i.classList.add("animate")}),1),setTimeout((()=>{t.style.opacity=1,i.style.height=t.offsetHeight+"px",n=!0}),2),setTimeout((()=>{i.style.opacity=0}),250),void setTimeout((()=>{t.style.height=null,t.style.opacity=null,t.style.position=null,t.style.visibility="visible",t.classList.remove("animate"),i.style.height=0,i.style.opacity=null,i.style.visibility="hidden",i.classList.remove("animate"),n=!1}),250)):void 0;i.style.height=0,i.style.visibility="hidden"}}))};c(0);const d=i[0]&&i[0].closest(".carousel--uninitialized");d&&d.classList.remove("carousel--uninitialized"),s.addEventListener("click",(()=>{const e=Array.from(i).findIndex((e=>"visible"===e.style.visibility)),t=e-1<0?i.length-1:e-1;c(t)})),l.addEventListener("click",(()=>{let e=Array.from(i).findIndex((e=>"visible"===e.style.visibility));e<0&&(e=0);const t=e+1>i.length-1?0:e+1;c(t)})),r.on("load",(()=>{r.addSource("markers",{type:"geojson",data:{type:"FeatureCollection",features:Array.from(i).map(((e,t)=>({geometry:{type:"Point",coordinates:[e?.dataset?.long||0,e?.dataset?.lat||0]},type:"Feature",properties:{id:e?.id,index:t}})))||[]},cluster:!0,clusterRadius:10,clusterProperties:{sum:["get","count",["get","value",["properties"]]]}}),r.addLayer({id:"marker_circle",type:"circle",source:"markers",filter:["!=","cluster",!0],paint:{"circle-color":"#000","circle-radius":1}}),r.addLayer({id:"marker_label",type:"symbol",source:"markers",filter:["!=","cluster",!0],layout:{"text-field":"{point_count_abbreviated}","text-size":10},paint:{"circle-color":"#000","text-color":"white"}}),r.on("render",(()=>{r.isSourceLoaded("markers")&&(()=>{const t=r.querySourceFeatures("markers"),i=document.getElementsByClassName("marker"),s=document.getElementsByClassName("cluster"),l=[],a=[];for(const n of t){const t=n.geometry.coordinates,{cluster:d,cluster_id:y,id:m,index:u}=n.properties,p=Array.from(i).filter((e=>e?.dataset?.id===m))?.[0]||null,f=Array.from(s).filter((e=>parseInt(e?.dataset?.clusterId)===y))?.[0]||null;if(d){if(!f){const i=document.createElement("div");i.className="cluster",i.dataset.clusterId=y,i.innerHTML=n.properties.point_count_abbreviated,new e.Marker(i).setDraggable(!1).setLngLat(t).addTo(r)}a.includes(y)||a.push(y)}if(!d){if(!p){const i=document.createElement("div");i.className="marker",i.dataset.id=m,new e.Marker(i).setDraggable(!1).setLngLat(t).addTo(r),u===o&&i.classList.add("active"),i.addEventListener("click",(()=>{c(u);const e=document.getElementById("map").getBoundingClientRect().top+window.scrollY+-140;window.scrollTo({top:e,behavior:"smooth"})}))}l.includes(m)||l.push(m)}}Array.from(i).forEach((e=>{l.includes(e?.dataset?.id)||e.remove()})),Array.from(s).forEach((e=>{a.includes(parseInt(e?.dataset?.clusterId))||e.remove()}))})()}))}))}));